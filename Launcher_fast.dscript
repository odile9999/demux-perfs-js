include("./Test_sequence.dscript")
include("./Configs.dscript")

// Stopping every previouly unstopped readout...
clean_stop()

operator_name=get_operator_name()
DACBIAS=get_dac_ref("bias")
DACFBCK=get_dac_ref("feedback")

//-------------------------------
// Definition of tests to be done
//-------------------------------
DoGBW = true

DoScienceSpectra = true
DoScienceSpectra20Msps = false
nbr_spectra = 10
spectra_duration_ms = 1000

DoEnergyResol = true
PixelType="CBE"  // (CBE, banc, autre = RAZ)
ER_nbr_pulses_calib	= 2000
ER_nbr_pulses_meas	= 3141
ER_nbr_files = 1
Threshold  = 200  // EP TRIGGER threshold
saveIQ = false  // If true the IQ files are saved during the energy resolution measurement (huge files)

// liste des modes du DAC AD9726:
dacModes = new Array("Factory", "Self-calibrated", "Uncalibrated")

getLatestValue("DRE_FirmwareId")
print("Firmware Id: ", DRE_FirmwareId.toString(16))
config = best_config(DRE_FirmwareId)
Default_amp = config.Default_amp
amp_pixel_test	= Default_amp
Gain = config.Gain
BIAS_trunc = config.BIAS_trunc
FBCK_trunc = config.FBCK_trunc
FBCK_gain = config.FBCK_gain
ModulationRatio = config.ModulationRatio
TES_NL = config.TES_NL

Channel_ID = 0
SQUID_interne = 0
dacMode = dacModes[0]

for (test_pix_index = 10; test_pix_index < 20;test_pix_index+=20) 
	{
		session_comment = ""
		session_name =  "DACBIAS-"+DACBIAS + "_DACFBCK-" + DACFBCK + "_pix-"+test_pix_index.toString()+"_fast"
		print("Starting test sequence "+session_name)
		test_sequence(
			session_name,
			session_comment,
			operator_name,
			Channel_ID,
			Default_amp,
			test_pix_index,
			amp_pixel_test,
			SQUID_interne,
			Gain,
			BIAS_trunc,
			FBCK_trunc,
			FBCK_gain,
			dacMode,
			FS,
			DoGBW,
			DoScienceSpectra,
			DoScienceSpectra20Msps,
			nbr_spectra,
			spectra_duration_ms,
			DoEnergyResol,
			PixelType,
			ER_nbr_pulses_calib,
			ER_nbr_pulses_meas,
			ER_nbr_files,
			Threshold,
			ModulationRatio,
			TES_NL,
			saveIQ
			)
	}
