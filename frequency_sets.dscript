////////////////////////////////////////////////////////////////////////////////
function carrier_freq2(fgridratio, nbcarriers)
// This function computes the set of carrier frequencies
	{
	switch (fgridratio) {
		case Math.pow(2,13):
			// Sampling frequency:          19530000 Hz
			// Mean frequency spacing:        100000 Hz
			// 1-sigma frequency dispersion:    2000 Hz
			// Frequency grid:                  2384 Hz
			// Ratio PeakPeak/FSR: 90.00%
			// Crest factor: 3.00
			// Set of carrier frequencies (Hz):
			freqtab=[
				998909.91, 1101423.34, 1201552.73, 1299298.10, 1401811.52, 1499556.88, 1597302.25, 1702199.71,
				1799945.07, 1900074.46, 2002587.89, 2100333.25, 2200462.65, 2300592.04, 2403105.47, 2498466.80,
				2598596.19, 2701109.62, 2798854.98, 2898984.38, 2999113.77, 3099243.16, 3204140.62, 3299501.95,
				3397247.31, 3499760.74, 3599890.14, 3700019.53, 3800148.93, 3902662.35, 3998023.68, 4098153.08,
				4198282.47, 4296027.83, 4398541.26, 4501054.69, 4598800.05, 4698929.44, 4799058.84, 4899188.23
			];
			// Set of carrier initial phases (Deg):
			phitab=[
				333.28,  178.95,  170.42,  337.06,  267.98,  271.76,  343.74,  337.06,
				183.96,   50.27,  284.33,  195.56,   21.80,  253.92,   97.12,   89.30,
				47.55,  252.33,  274.13,  158.55,  291.36,  348.40,  128.41,    6.94,
				70.75,  278.61,   96.06,  244.95,   65.57,  125.42,  194.33,   41.22,
				146.78,   25.31,  300.94,  143.17,  346.03,  260.16,   21.27,  353.85
			];
			break;

		case Math.pow(2,14):
			// Sampling frequency:          19530000 Hz
			// Mean frequency spacing:        100000 Hz
			// 1-sigma frequency dispersion:    2000 Hz
			// Frequency grid:                  1192 Hz
			// Ratio PeakPeak/FSR: 90.00%
			// Crest factor: 3.35
			// Set of carrier frequencies (Hz):
			freqtab=[
				1006062.01, 1101423.34, 1200360.72, 1301682.13, 1399427.49, 1501940.92, 1600878.30, 1701007.69,
				1798753.05, 1898882.45, 1997819.82, 2096757.20, 2195694.58, 2298208.01, 2395953.37, 2502042.85,
				2598596.19, 2698725.59, 2804815.06, 2898984.38, 3000305.79, 3099243.16, 3200564.58, 3298309.94,
				3399631.35, 3502144.78, 3598698.12, 3702403.56, 3803724.98, 3900278.32, 4002791.75, 4100537.11,
				4198282.47, 4300795.90, 4396157.23, 4501054.69, 4598800.05, 4696545.41, 4796674.80, 4897996.22
			];
			// Set of carrier initial phases (Deg):
			phitab=[
				313.15,  336.01,  150.29,  192.66,  343.48,  112.76,   32.70,  155.39,
				93.87,  216.83,  313.51,  335.74,  333.02,   58.10,  346.73,   66.71,
				314.82,   40.52,  282.74,  194.68,   33.05,  333.02,  147.66,   99.49,
				345.76,  194.33,  237.83,  180.18,  161.81,  303.05,  191.78,  299.00,
				168.31,  284.33,  147.22,  147.57,  266.48,  148.80,  304.63,   69.08
			];
			break;

		case Math.pow(2,15):
			// Sampling frequency:          19530000 Hz
			// Mean frequency spacing:        100000 Hz
			// 1-sigma frequency dispersion:    2000 Hz
			// Frequency grid:                   596 Hz
			// Ratio PeakPeak/FSR: 90.00%
			// Crest factor: 3.39
			// Set of carrier frequencies (Hz):
			freqtab=[
				1002485.96, 1099039.31, 1197380.68, 1299298.10, 1403003.54, 1497768.86, 1601474.30, 1701007.69,
				1802329.10, 1898882.45, 1996627.81, 2098545.23, 2202846.68, 2298804.02, 2399529.42, 2500254.82,
				2599192.20, 2696341.55, 2798258.97, 2901368.41, 3001497.80, 3097455.14, 3202352.60, 3298309.94,
				3397247.31, 3502144.78, 3599294.13, 3701807.56, 3800744.93, 3902066.35, 3998023.68, 4096961.06,
				4201858.52, 4297219.85, 4400329.28, 4496882.63, 4596416.02, 4700121.46, 4801442.87, 4903956.30
			];
			// Set of carrier initial phases (Deg):
			phitab=[
				276.59,  351.04,   83.85,   81.12,  259.63,  135.18,   15.12,  250.31,
				235.37,  136.93,  240.03,  173.76,  128.06,   66.71,   48.87,  343.83,
				333.98,  344.44,  201.45,  359.12,   41.04,  324.58,  250.84,  291.97,
				49.04,  188.35,  255.59,  307.27,  242.84,   14.68,  211.90,  334.86,
				352.09,  211.46,  243.90,  308.14,  191.43,  123.40,   79.80,  233.88
			];
			break;

		case Math.pow(2,16):
			// Sampling frequency:          19530000 Hz
			// Mean frequency spacing:        100000 Hz
			// 1-sigma frequency dispersion:    2000 Hz
			// Frequency grid:                   298 Hz
			// Ratio PeakPeak/FSR: 90.00%
			// Crest factor: 3.60
			// Set of carrier frequencies (Hz):
			freqtab=[
				1000995.94, 1102019.35, 1197082.67, 1302874.15, 1400917.51, 1498960.88, 1599090.27, 1698325.65,
				1798455.05, 1896200.41, 2002289.89, 2101227.26, 2199568.63, 2302678.07, 2399231.41, 2500850.83,
				2595318.15, 2700811.61, 2802729.03, 2903752.44, 3005371.86, 3097455.14, 3195796.51, 3301587.98,
				3399929.35, 3503634.80, 3601976.17, 3698827.51, 3800446.93, 3900278.32, 4002195.74, 4099941.10,
				4199772.49, 4300199.89, 4402713.32, 4502544.71, 4601184.08, 4698333.44, 4797270.81, 4897400.21
			];
			// Set of carrier initial phases (Deg):
			phitab=[
				167.87,  277.65,  115.31,  101.95,   35.42,  133.42,   50.45,  265.25,
				77.08,  212.08,  194.59,   62.23,  277.38,  104.50,  341.28,  356.48,
				160.22,  356.40,  192.39,   41.57,  338.12,   17.14,  273.60,  187.29,
				251.37,   35.42,  164.97,  220.78,  280.02,   32.26,  147.22,  286.26,
				234.67,  189.84,   62.05,  216.91,  308.06,  337.06,   48.78,  226.41
			];
			break;

		case Math.pow(2,17):
			// Sampling frequency:          19530000 Hz
			// Mean frequency spacing:        100000 Hz
			// 1-sigma frequency dispersion:    2000 Hz
			// Frequency grid:                   149 Hz
			// Ratio PeakPeak/FSR: 90.00%
			// Crest factor: 3.63
			// Set of carrier frequencies (Hz):
			freqtab=[
				999505.92, 1097847.29, 1201403.73, 1300788.12, 1401513.52, 1496576.84, 1603858.34, 1698772.66,
				1799200.06, 1901862.49, 1995584.79, 2101078.26, 2200611.65, 2298804.02, 2401019.44, 2499956.82,
				2599043.20, 2701854.63, 2799301.99, 2898537.37, 2998815.77, 3101776.20, 3201309.59, 3297117.92,
				3397992.32, 3503783.80, 3599890.14, 3700019.53, 3798360.90, 3899384.31, 4001152.73, 4099941.10,
				4198431.47, 4301838.91, 4403011.32, 4500905.69, 4602376.10, 4703250.50, 4797270.81, 4900976.26
			];
			// Set of carrier initial phases (Deg):
			phitab=[
				217.88,   86.84,  200.83,   42.54,   33.84,  183.96,  172.97,  101.43,
				309.38,   83.50,   99.32,   55.37,   74.53,  245.57,  173.23,   94.57,
				148.18,  196.52,  285.91,  222.28,  146.78,   10.20,  282.92,  324.40,
				148.71,  228.34,  355.08,   71.54,  315.26,  209.18,  279.05,  231.50,
				47.64,   13.18,  323.00,   66.18,  223.15,   75.76,  125.42,  142.21
			];
			break;

		case Math.pow(2,18):
			// Sampling frequency:          19530000 Hz
			// Mean frequency spacing:        100000 Hz
			// 1-sigma frequency dispersion:    2000 Hz
			// Frequency grid:                    74 Hz
			// Ratio PeakPeak/FSR: 90.00%
			// Crest factor: 3.93
			// Set of carrier frequencies (Hz):
			freqtab=[
				999356.92, 1099933.32, 1194549.64, 1302725.14, 1401439.02, 1500301.90, 1599388.28, 1703242.72,
				1800913.58, 1898658.94, 2000278.36, 2098247.22, 2199717.64, 2298580.51, 2399752.92, 2497572.78,
				2599639.21, 2701780.13, 2799152.98, 2900250.89, 3001199.80, 3100286.18, 3201682.09, 3297117.92,
				3399556.85, 3501846.77, 3604211.20, 3704340.59, 3801117.44, 3901842.84, 3997204.17, 4098451.08,
				4201337.01, 4299901.89, 4400031.28, 4499490.17, 4601631.09, 4703772.01, 4801964.38, 4899486.24
			];
			// Set of carrier initial phases (Deg):
			phitab=[
				204.26,  153.98,   84.46,  182.72,  272.02,  127.53,  294.70,   74.09,
				207.77,  249.08,  219.20,   80.07,  156.45,   32.34,  338.47,   21.88,
				126.56,  352.79,  276.94,  191.25,  184.13,  215.95,  309.64,  227.20,
				335.30,   17.31,  122.43,  213.22,  279.49,  116.10,   75.41,  254.71,
				70.40,  112.24,  355.96,  321.15,   59.85,  209.27,  167.08,  117.25
			];
			break;

		case Math.pow(2,19):
			// Sampling frequency:          19530000 Hz
			// Mean frequency spacing:        100000 Hz
			// 1-sigma frequency dispersion:    2000 Hz
			// Frequency grid:                    37 Hz
			// Ratio PeakPeak/FSR: 90.00%
			// Crest factor: 4.10
			// Set of carrier frequencies (Hz):
			freqtab=[
				1000250.93, 1099300.06, 1201925.24, 1298925.59, 1394361.42, 1498290.37, 1600245.04, 1703577.98,
				1796331.77, 1897839.43, 1999756.85, 2104244.56, 2196737.59, 2300778.29, 2400795.94, 2499286.31,
				2597739.43, 2702525.14, 2799190.24, 2902970.18, 3002466.32, 3097455.14, 3200676.33, 3300544.97,
				3399184.34, 3501958.52, 3600672.40, 3701956.56, 3799850.92, 3901619.34, 3998247.18, 4098153.08,
				4201560.52, 4301801.66, 4395337.72, 4501278.19, 4597310.03, 4700158.71, 4804087.66, 4900156.75
			];
			// Set of carrier initial phases (Deg):
			phitab=[
				339.43,  314.56,  112.24,  122.26,  105.91,  200.74,  118.30,   44.74,
				87.10,  303.93,   89.30,    3.69,  232.56,  177.01,  150.03,  205.49,
				274.57,  287.93,   95.01,   47.37,  337.50,  246.01,  170.95,  357.89,
				10.63,  179.12,   86.92,  121.29,  308.14,  210.06,  177.71,  210.94,
				268.33,   66.09,  206.46,  304.63,    2.46,   68.47,  354.20,  227.20
			];
			break;

		case Math.pow(2,20):
			// Sampling frequency:          19530000 Hz
			// Mean frequency spacing:        100000 Hz
			// 1-sigma frequency dispersion:    2000 Hz
			// Frequency grid:                    18 Hz
			// Ratio PeakPeak/FSR: 90.00%
			// Crest factor: 4.22   // Set of carrier frequencies (Hz):
			freqtab=[
				999822.55, 1102000.72, 1200826.35, 1302091.88, 1398216.85, 1499705.89, 1600058.78, 1701547.82,
				1800019.57, 1901396.86, 1998155.08, 2095621.06, 2196588.59, 2296941.49, 2396679.75, 2499062.81,
				2598950.07, 2702469.26, 2800736.13, 2903547.56, 2997009.12, 3104346.49, 3199298.06, 3301848.74,
				3401531.12, 3500543.00, 3599350.00, 3700634.16, 3801471.32, 3901060.58, 4000109.71, 4099494.09,
				4204335.68, 4300889.02, 4399379.40, 4500551.81, 4600811.58, 4699897.96, 4799934.23, 4900510.63
			];
			// Set of carrier initial phases (Deg):
			phitab=[
				235.55,   46.32,  132.19,  143.26,  190.37,  105.38,   68.99,  213.84,
				359.74,  117.69,  114.17,  265.25,   66.01,  197.67,  333.63,  180.09,
				317.02,  267.28,  174.46,  195.91,  121.90,  323.44,  173.85,  107.67,
				198.37,   40.43,  199.34,  137.02,    4.92,  287.23,  129.55,  234.14,
				336.01,   15.29,  176.48,  115.66,  333.46,   70.75,  263.94,   55.63
			];
			break;
		}

	print_freq_tab(FREQtab.slice(0, nbcarriers));
	print_phi_tab(PHIItab.slice(0, nbcarriers));
		
	return {
		FREQtab: freqtab.slice(0, nbcarriers),
		PHIItab: phitab.slice(0, nbcarriers)
		};
	}

////////////////////////////////////////////////////////////////////////////////

function carrier_freq(Spread, Fgrid, nbcarriers)
// This function computes the set of carrier frequencies
	{
	switch (Spread) {
		case "No":
			// Definition of LC resonance frequencies: 100.0 kHz step and  0.0 kHz dispersion @ 1 sigma
			print("No spread around ideal 100kHz grid")
			FREQtab = [
				1000000.00, 1100000.00, 1200000.00, 1300000.00, 1400000.00, 1500000.00, 1600000.00, 1700000.00,
				1800000.00, 1900000.00, 2000000.00, 2100000.00, 2200000.00, 2300000.00, 2400000.00, 2500000.00,
				2600000.00, 2700000.00, 2800000.00, 2900000.00, 3000000.00, 3100000.00, 3200000.00, 3300000.00,
				3400000.00, 3500000.00, 3600000.00, 3700000.00, 3800000.00, 3900000.00, 4000000.00, 4100000.00,
				4200000.00, 4300000.00, 4400000.00, 4500000.00, 4600000.00, 4700000.00, 4800000.00, 4900000.00,
				]
			break
		case "Normal":
			// Definition of LC resonance frequencies: 100.0 kHz step and  2.0 kHz dispersion @ 1 sigma
			print("Normal spread around ideal 100kHz grid")
			FREQtab = [
				996704.86, 1097653.73, 1197333.15, 1301868.92, 1400987.31, 1500698.06, 1596579.61, 1697836.03,
				1794853.56, 1901259.85, 1999130.86, 2101956.92, 2200656.92, 2299750.19, 2400616.07, 2499278.93,
				2598731.30, 2701501.05, 2798540.48, 2903169.11, 2998998.49, 3099093.41, 3198765.55, 3297652.76,
				3398986.46, 3501151.12, 3602702.04, 3702049.53, 3797144.36, 3899066.58, 4001907.83, 4099602.47,
				4200198.73, 4301944.65, 4398899.80, 4501899.92, 4602836.70, 4699252.43, 4797968.19, 4900545.02,
				]
			break
		case "Huge":
			// Definition of LC resonance frequencies: 100.0 kHz step and  5.0 kHz dispersion @ 1 sigma
			print("Huge spread around ideal 100kHz grid")
			FREQtab = [
				1002656.49, 1102642.86, 1199864.85, 1304155.35, 1408462.12, 1496696.95, 1597934.81, 1703763.20,
				1799162.90, 1892685.25, 2006563.03, 2097925.96, 2206107.51, 2299695.00, 2395534.38, 2512506.79,
				2596784.44, 2696679.10, 2794153.82, 2900068.66, 2992240.22, 3089285.15, 3205906.49, 3304381.29,
				3399724.42, 3501857.99, 3600557.53, 3702984.09, 3803244.73, 3899462.84, 4007617.30, 4104209.38,
				4197136.25, 4299587.03, 4409470.87, 4500047.15, 4601632.49, 4698735.13, 4802668.38, 4906147.21,
				]
			break
		}

	for(i=0;i<nbcarriers;i++){            // This loop aligns the firmware frequencies on a frequency grid
		FREQtab[i] = Fgrid*(Math.round(FREQtab[i]/Fgrid))
		PHIItab[i] = (Math.PI*i*i/Npix)*180/Math.PI  // apply the Schroeder's minus relation defined in eq (6.10) in page 163 of the Bible
		}

	print_freq_tab(FREQtab.slice(0, nbcarriers));
	print_phi_tab(PHIItab.slice(0, nbcarriers));

	return {
			FREQtab: FREQtab.slice(0, nbcarriers),
			PHIItab: PHIItab.slice(0, nbcarriers)
			};	
	}

////////////////////////////////////////////////////////////////////////////////

function print_freq_tab(FREQtab)
// This function print a set of nfrequencies
	{
	print("The values of the carrier frequencies set in the firmware are:")
	Ncol=8
	Nlines=5
	for(line=0;line<Nlines;line++)
		{
		for(linestring='', col=0;col<Ncol;col++)
			{
			if (line*Ncol+col < FREQtab.length)
				{
				freq=("0000000"+parseInt(FREQtab[line*Ncol+col]).toString()).slice(-7)+"Hz    "
				linestring=linestring+freq
				}
			}
		print(linestring)
		}
	}

////////////////////////////////////////////////////////////////////////////////

function print_phi_tab(PHIItab)
// This function print a set of nfrequencies
	{
	print("The values of the initial phases set in the firmware are:")
	Ncol=8
	Nlines=5
	for(line=0;line<Nlines;line++)
		{
		for(linestring='', col=0;col<Ncol;col++)
			{
			if (line*Ncol+col < PHIItab.length)
				{
				phi=("000"+parseInt(PHIItab[line*Ncol+col]).toString()).slice(-3)+"deg    "
				linestring=linestring+phi
				}
			}
		print(linestring)
		}
	}

////////////////////////////////////////////////////////////////////////////////
