include("./Test_sequence.dscript")
include("./Configs.dscript")

// Stopping every previouly unstopped readout...
clean_stop()

operator_name=get_operator_name()
session_name=get_session_name()

// Definition of tests to be done
DoEnergyResol = true
DoGBW = true
DoScienceSpectra	= true
Test_pix_only = false

// Definition of parameters ///////////////////////////////////////////////////////////////////
// Definition of the firmware frequency grid
Fgrids = new Array(FS/Math.pow(2,18),FS/Math.pow(2,15),FS/Math.pow(2,13))

// liste des modes du DAC AD9726:
dacModes = new Array("Factory", "Self-calibrated", "Uncalibrated")

getLatestValue("DRE_FirmwareId")
print(DRE_FirmwareId)
config = best_config(DRE_FirmwareId)
Default_amp = config.Default_amp
amp_pixel_test	= Default_amp
Gain = config.Gain
BIAS_trunc = config.BIAS_trunc
FBCK_trunc = config.FBCK_trunc
FBCK_gain = config.FBCK_gain

Channel_ID		= 0
test_pix_index	= 30
SQUID_interne	= 0
Fgrid			= Fgrids[2]
dacMode 		= dacModes[0]

//Spread = "No"
Spread = "Normal"  // Default setting
//Spread = "Huge"

// Nbr and duration of measurements for spectra characterization 
nbr_spectra         = 40
spectra_duration_ms	= 1000

ER_nbr_pulses_meas	= 2019
ModulationRatio = 64.5 // 64.5% modulation corresponds to 7keV with LPA 75um pixels
Threshold  = 150  // TRIGGER threshold
saveIQ = false  // If true the IQ files are saved during the energy resolution measurement (huge files)


//for (fgridIndex = 0; fgridIndex < Fgrids.length;++fgridIndex) {
//	Fgrid = Fgrids[fgridIndex]

for (iteration = 0; iteration < 1;iteration+=1)
	{
	session_comment = ""
	print("Starting test sequence "+session_name)
	//linearity_test_sequence(
	test_sequence(
		session_name,
		session_comment,
		operator_name,
		Channel_ID,
		Default_amp,
		test_pix_index,
		amp_pixel_test,
		SQUID_interne,
		Gain,
		BIAS_trunc,
		FBCK_trunc,
		FBCK_gain,
		Fgrid,
		dacMode,
		Spread,
		Npix,
		FS,
		DoGBW,
		DoScienceSpectra,
		nbr_spectra,
		spectra_duration_ms,
		DoEnergyResol,
		ER_nbr_pulses_meas,
		Threshold,
		ModulationRatio,
		saveIQ,
		Test_pix_only)
}
